{"version":3,"file":"Expandable.stories-yd6qkvbj.js","sources":["../../node_modules/.pnpm/@warp-ds+icons@1.4.0/node_modules/@warp-ds/icons/dist/react/chevron-up-16.js","../../packages/expandable/src/component.tsx"],"sourcesContent":["var __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\n\n// react/chevron-up-16.js\nimport React from \"react\";\nimport { i18n as i18n2 } from \"@lingui/core\";\n\n// src/raw/chevron-up/locales/nb/messages.mjs\nvar messages = JSON.parse('{\"icon.title.chevron-up\":\"Oppoverpil\"}');\n\n// src/raw/chevron-up/locales/en/messages.mjs\nvar messages2 = JSON.parse('{\"icon.title.chevron-up\":\"Upward arrow\"}');\n\n// src/raw/chevron-up/locales/fi/messages.mjs\nvar messages3 = JSON.parse('{\"icon.title.chevron-up\":\"Nuoli yl\\xF6sp\\xE4in\"}');\n\n// src/utils/i18n.ts\nimport { i18n } from \"@lingui/core\";\nvar supportedLocales = [\"en\", \"nb\", \"fi\"];\nvar defaultLocale = \"en\";\nvar getSupportedLocale = (usedLocale) => {\n  return supportedLocales.find(\n    (locale) => usedLocale === locale || usedLocale.toLowerCase().includes(locale)\n  ) || defaultLocale;\n};\nfunction detectLocale() {\n  if (typeof window === \"undefined\") {\n    const serverLocale = process.env.NMP_LANGUAGE || Intl.DateTimeFormat().resolvedOptions().locale;\n    return getSupportedLocale(serverLocale);\n  }\n  try {\n    const htmlLocale = document.documentElement.lang;\n    return getSupportedLocale(htmlLocale);\n  } catch (e) {\n    console.warn(\"could not detect locale, falling back to source locale\", e);\n    return defaultLocale;\n  }\n}\nvar getMessages = (locale, enMsg, nbMsg, fiMsg) => {\n  if (locale === \"nb\")\n    return nbMsg;\n  if (locale === \"fi\")\n    return fiMsg;\n  return enMsg;\n};\nvar activateI18n = (enMessages, nbMessages, fiMessages) => {\n  const locale = detectLocale();\n  const messages4 = getMessages(locale, enMessages, nbMessages, fiMessages);\n  i18n.load(locale, messages4);\n  i18n.activate(locale);\n};\n\n// react/chevron-up-16.js\nactivateI18n(messages2, messages, messages3);\nvar title = i18n2.t({ message: `Upward arrow`, id: \"icon.title.chevron-up\", comment: \"Title for chevron-up icon\" });\nvar IconChevronUp16 = (attrs) => React.createElement(\"svg\", __spreadValues({ xmlns: \"http://www.w3.org/2000/svg\", width: \"16\", height: \"16\", fill: \"none\", viewBox: \"0 0 16 16\", dangerouslySetInnerHTML: { __html: `<title>${title}</title><path stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"1.5\" d=\"M2.5 11 8 5.5l5.5 5.5\"></path>` } }, attrs));\nvar chevron_up_16_default = IconChevronUp16;\nexport {\n  IconChevronUp16,\n  chevron_up_16_default as default\n};\n//# sourceMappingURL=chevron-up-16.js.map\n","import { classNames } from \"@chbphone55/classnames\";\nimport {\n  box as ccBox,\n  expandable as ccExpandable,\n} from \"@warp-ds/css/component-classes\";\nimport React from \"react\";\nimport { ExpandTransition, UnstyledHeading } from \"../../_helpers/index.js\";\nimport { ExpandableProps } from \"./props.js\";\nimport IconChevronDown16 from '@warp-ds/icons/react/chevron-down-16';\nimport IconChevronUp16 from '@warp-ds/icons/react/chevron-up-16';\n\nexport function Expandable(props: ExpandableProps) {\n  const {\n    children,\n    expanded = false,\n    title = \"\",\n    info = false,\n    box = false,\n    bleed = false,\n    buttonClass = \"\",\n    contentClass = \"\",\n    className,\n    onChange,\n    chevron = true,\n    animated,\n    headingLevel,\n    ...rest\n  } = props;\n\n  const [stateExpanded, setStateExpanded] = React.useState(expanded);\n  const [showChevronUp, setShowChevronUp] = React.useState(expanded);\n\n  React.useEffect(() => {\n    setStateExpanded(expanded);\n  }, [expanded]);\n\n  const toggleExpandable = (state) => {\n    setStateExpanded(!state);\n    // We need a slight delay for the animation since it has a transition-duration of 150ms:\n    setTimeout(() => {\n      setShowChevronUp(!state);\n    }, 200);\n    if (onChange) onChange(!state);\n  };\n\n  return (\n    <div\n      {...rest}\n      className={classNames(className, {\n        [ccExpandable.expandable]: true,\n        [ccExpandable.expandableBox]: box,\n        [ccExpandable.expandableBleed]: bleed,\n      })}\n    >\n      <UnstyledHeading level={headingLevel}>\n        <button\n          type=\"button\"\n          aria-expanded={stateExpanded}\n          className={classNames({\n            [buttonClass || \"\"]: true,\n            [ccExpandable.button]: true,\n            [ccExpandable.buttonBox]: box,\n          })}\n          onClick={() => toggleExpandable(stateExpanded)}\n        >\n          <div className={ccExpandable.title}>\n            {typeof title === \"string\" ? (\n              <span className={ccExpandable.titleType}>{title}</span>\n            ) : (\n              title\n            )}\n            {chevron && (\n              <div\n                className={classNames({\n                  [ccExpandable.chevron]: true,\n                  [ccExpandable.chevronBox]: box,\n                  [ccExpandable.chevronNonBox]: !box,\n                })}\n              >\n                {showChevronUp ? (\n                  <IconChevronUp16\n                    className={classNames({\n                      [ccExpandable.chevronTransform]: true,\n                      [ccExpandable.chevronCollapse]:\n                        !stateExpanded && showChevronUp,\n                    })}\n                  />\n                ) : (\n                  <IconChevronDown16\n                    className={classNames({\n                      [ccExpandable.chevronTransform]: true,\n                      [ccExpandable.chevronExpand]:\n                        stateExpanded && !showChevronUp,\n                    })}\n                  />\n                )}\n              </div>\n            )}\n          </div>\n        </button>\n      </UnstyledHeading>\n      <ExpansionBehaviour animated={animated} stateExpanded={stateExpanded}>\n        <div\n          className={classNames({\n            [contentClass || \"\"]: true,\n            [ccBox.box]: box,\n            [ccExpandable.paddingTop]: box && title,\n          })}\n        >\n          {children}\n        </div>\n      </ExpansionBehaviour>\n    </div>\n  );\n}\n\nfunction ExpansionBehaviour({ animated, stateExpanded, children }) {\n  return animated ? (\n    <ExpandTransition show={stateExpanded}>{children}</ExpandTransition>\n  ) : (\n    <div\n      className={classNames({\n        [ccExpandable.expansion]: true,\n        [ccExpandable.expansionNotExpanded]: !stateExpanded,\n      })}\n      aria-hidden={!stateExpanded ? true : undefined}\n    >\n      {children}\n    </div>\n  );\n}\n"],"names":["define_process_env_default","Expandable","props","children","expanded","title","info","box","bleed","buttonClass","contentClass","className","onChange","chevron","animated","headingLevel","rest","stateExpanded","setStateExpanded","React","showChevronUp","setShowChevronUp","toggleExpandable","state","jsxs","classNames","ccExpandable","jsx","UnstyledHeading","IconChevronUp16","IconChevronDown16","ExpansionBehaviour","ccBox","ExpandTransition"],"mappings":"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","x_google_ignoreList":[0]}