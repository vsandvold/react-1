{"version":3,"file":"component-2c065be3.js","sources":["../../packages/textfield/src/locales/nb/messages.mjs","../../packages/textfield/src/locales/en/messages.mjs","../../packages/textfield/src/locales/fi/messages.mjs","../../packages/textfield/src/component.tsx"],"sourcesContent":["/*eslint-disable*/export const messages=JSON.parse(\"{\\\"textfield.label.optional\\\":\\\"(valgfritt)\\\"}\");","/*eslint-disable*/export const messages=JSON.parse(\"{\\\"textfield.label.optional\\\":\\\"(optional)\\\"}\");","/*eslint-disable*/export const messages=JSON.parse(\"{\\\"textfield.label.optional\\\":\\\"(vapaaehtoinen)\\\"}\");","import React, { forwardRef } from 'react';\nimport { i18n } from '@lingui/core';\nimport { classNames } from '@chbphone55/classnames';\nimport { input as ccInput, label as ccLabel, helpText as ccHelpText } from '@warp-ds/css/component-classes';\nimport { useId } from '../../utils/src/index.js';\nimport { TextFieldProps } from './props.js';\nimport { messages as nbMessages} from './locales/nb/messages.mjs';\nimport { messages as enMessages} from './locales/en/messages.mjs';\nimport { messages as fiMessages} from './locales/fi/messages.mjs';\nimport { activateI18n } from '../../i18n.js';\n\nexport const TextField = forwardRef<HTMLInputElement, TextFieldProps>(\n  (props, ref) => {\n    const {\n      className,\n      disabled,\n      id: providedId,\n      children,\n      invalid,\n      error,\n      helpText,\n      label,\n      readOnly,\n      type = 'text',\n      style,\n      optional,\n      ...rest\n    } = props;\n\n    activateI18n(enMessages, nbMessages, fiMessages);\n\n    const id = useId(providedId);\n\n    const helpId = helpText ? `${id}__hint` : undefined;\n    const isInvalid = invalid || error;\n\n    const suffix = React.Children.toArray(children).find(\n      (child) => React.isValidElement(child) && child.props.suffix,\n    );\n    const prefix = React.Children.toArray(children).find(\n      (child) => React.isValidElement(child) && child.props.prefix,\n    );\n\n    return (\n        <div \n          className={className}\n          style={style}\n        >\n          {/* we style input with prefix here because we cannot use arbitrary values with commas in UnoCSS like pl-[var(--w-prefix-width, 40px)] */}\n          <style>\n            {`\n              div+#${id}, button+#${id} {\n                padding-left:var(--w-prefix-width, 40px);\n              }\n            `}\n          </style>\n          {label && (\n            <label htmlFor={id} className={classNames({\n              [ccLabel.label]: true,\n              [ccLabel.labelInvalid]: isInvalid\n            })} >\n              {label}\n              {optional && (\n                <span className={ccLabel.optional}>\n                  {i18n._(\n                    /*i18n*/ {\n                      id: 'textfield.label.optional',\n                      message: '(optional)',\n                      comment: 'Shown behind label when marked as optional',\n                    },\n                  )}\n                </span>\n              )}\n            </label>\n          )}\n          <div className={ccInput.wrapper}>\n            {prefix}\n            <input\n            className={classNames({\n              [ccInput.default]: true,\n              [ccInput.invalid]: isInvalid,\n              [ccInput.disabled]: disabled,\n              [ccInput.readOnly]: readOnly,\n              [ccInput.placeholder]: !!props.placeholder,\n              [ccInput.suffix]: !!suffix,\n              [ccInput.prefix]: !!prefix,    \n            })}\n              {...rest}\n              aria-describedby={helpId}\n              aria-errormessage={isInvalid && helpId ? helpId : undefined}\n              aria-invalid={isInvalid}\n              disabled={disabled}\n              id={id}\n              readOnly={readOnly}\n              ref={ref}\n              type={type}\n            />\n            {suffix}\n          </div>\n\n          {helpText && (\n            <div className={classNames({\n              [ccHelpText.helpText]: true,\n              [ccHelpText.helpTextInvalid]: isInvalid\n            })} id={helpId}>\n              {helpText}\n            </div>\n          )}\n        </div>\n    );\n  },\n);\n"],"names":["messages","TextField","forwardRef","props","ref","className","disabled","providedId","children","invalid","error","helpText","label","readOnly","type","style","optional","rest","activateI18n","enMessages","nbMessages","fiMessages","id","useId","helpId","isInvalid","suffix","React","child","prefix","jsxs","jsx","classNames","ccLabel","i18n","ccInput","ccHelpText"],"mappings":"4OAAyB,MAAMA,EAAS,KAAK,MAAM,4CAAgD,ECApEA,EAAS,KAAK,MAAM,2CAA+C,ECAnEA,EAAS,KAAK,MAAM,gDAAoD,ECWhGC,EAAAC,EAAA,WAAkB,CAAAC,EAAAC,IAAA,CAErB,KAAA,CAAM,UAAAC,EACJ,SAAAC,EACA,GAAAC,EACI,SAAAC,EACJ,QAAAC,EACA,MAAAC,EACA,SAAAC,EACA,MAAAC,EACA,SAAAC,EACA,KAAAC,EAAA,OACO,MAAAC,EACP,SAAAC,EACA,GAAAC,CACG,EAAAd,EAGLe,EAAAC,EAAAC,EAAAC,CAAA,EAEA,MAAAC,EAAAC,EAAAhB,CAAA,EAEAiB,EAAAb,EAAA,GAAAW,UAAA,OACAG,EAAAhB,GAAAC,EAEAgB,EAAAC,EAAA,SAAA,QAAAnB,CAAA,EAAA,KAAgDoB,GAAAD,EAAA,eAAAC,CAAA,GAAAA,EAAA,MAAA,MACQ,EAExDC,EAAAF,EAAA,SAAA,QAAAnB,CAAA,EAAA,KAAgDoB,GAAAD,EAAA,eAAAC,CAAA,GAAAA,EAAA,MAAA,MACQ,EAGxD,OAAAE,EAAA,KACI,MAAC,CAAA,UAAAzB,EACC,MAAAU,EACA,SAAA,CAGAgB,MAAA,QAAA,CAAA,SAAA;AAAA,qBACGT,cAAAA;AAAA;AAAA;AAAA,cACuB,EAI1BV,GAAAkB,EAAA,KAAA,QAAA,CAAA,QAAAR,EAAA,UAAAU,EAAA,CAE4C,CAAAC,EAAA,KAAA,EAAA,GACvB,CAAAA,EAAA,YAAA,EAAAR,CACO,CAAA,EAAA,SAAA,CAEvBb,EAAAI,GAAAe,EAAAA,IAAA,OAAA,CAAA,UAAAE,EAAA,SAAA,SAAAC,EAAA,EAGS,CACK,GAAA,2BACH,QAAA,aACK,QAAA,4CACA,CACX,EAAA,CAEJ,EAAA,EAEJJ,EAAA,KAAA,MAAA,CAAA,UAAAK,EAAA,QAAA,SAAA,CAGCN,EAAAE,EAAA,IACD,QAAC,CAAA,UAAAC,EAAA,CACqB,CAAAG,EAAA,OAAA,EAAA,GACD,CAAAA,EAAA,OAAA,EAAAV,EACA,CAAAU,EAAA,QAAA,EAAA7B,EACC,CAAA6B,EAAA,QAAA,EAAAtB,EACA,CAAAsB,EAAA,WAAA,EAAA,CAAA,CAAAhC,EAAA,YACW,CAAAgC,EAAA,MAAA,EAAA,CAAA,CAAAT,EACX,CAAAS,EAAA,MAAA,EAAA,CAAA,CAAAN,CACA,CAAA,EACrB,GAAAZ,EACK,mBAAAO,EACc,oBAAAC,GAAAD,EAAAA,EAAA,OACgC,eAAAC,EACpC,SAAAnB,EACd,GAAAgB,EACA,SAAAT,EACA,IAAAT,EACA,KAAAU,CACA,CAAA,EACFY,CACC,EAAA,EACHf,GAAAoB,EAAAA,IAAA,MAAA,CAAA,UAAAC,EAAA,CAG6B,CAAAI,EAAA,QAAA,EAAA,GACF,CAAAA,EAAA,eAAA,EAAAX,CACO,CAAA,EAAA,GAAAD,EAAA,SAAAb,CAAA,CAAA,CAGhC,CAAA,CAAA,CAEJ,CAGR"}