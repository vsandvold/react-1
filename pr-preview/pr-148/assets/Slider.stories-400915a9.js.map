{"version":3,"file":"Slider.stories-400915a9.js","sources":["../../node_modules/.pnpm/@warp-ds+core@1.0.2/node_modules/@warp-ds/core/dist/slider/utils/helpers.js","../../node_modules/.pnpm/@warp-ds+core@1.0.2/node_modules/@warp-ds/core/dist/slider/utils/handlers.js","../../packages/slider/src/component.tsx"],"sourcesContent":["export const useDimensions = () => {\n    let observer;\n    // we use boundingClient because other observer attributes don't calculate X offset in a useful way\n    const useOnResize = (updateDimensions) => (entries) => {\n        const { left, width: w } = entries[0].target.getBoundingClientRect();\n        updateDimensions({ left, width: w - 24 }); // so the thumb can't run off the track to the right\n    };\n    const mountedHook = (sliderLineEl, updateDimensions) => {\n        updateDimensions(sliderLineEl.getBoundingClientRect());\n        observer = new ResizeObserver(useOnResize(updateDimensions));\n        observer.observe(sliderLineEl);\n    };\n    const unmountedHook = () => {\n        observer.disconnect();\n    };\n    return { mountedHook, unmountedHook };\n};\nexport const validKeys = Object.freeze({\n    up: \"ArrowUp\",\n    down: \"ArrowDown\",\n    left: \"ArrowLeft\",\n    right: \"ArrowRight\",\n    end: \"End\",\n    home: \"Home\",\n    pageup: \"PageUp\",\n    pagedown: \"PageDown\",\n});\nexport const validKeyCodes = Object.values(validKeys);\nexport const eventOptions = { passive: true };\nexport function roundDecimals(n, decimals = 2) {\n    const rounding = decimals ? Math.pow(10, decimals) : 1;\n    return Math.round(n * rounding) / rounding;\n}\nconst isNumber = (e) => Number.isFinite(parseFloat(e));\nexport const clamp = (v, { min, max }) => (isNumber(v) ? Math.min(Math.max(Number(v), min), max) : min);\n","import { validKeyCodes, validKeys, eventOptions, clamp, roundDecimals, } from './helpers.js';\nexport function createHandlers({ props, sliderState }) {\n    const clampedChange = (n) => clamp(n, { max: props.max, min: props.min });\n    function getCoordinates(e) {\n        const { left: offsetLeft, width: trackWidth } = sliderState.dimensions;\n        const clientX = 'touches' in e ? e.touches[0].clientX : e.clientX;\n        let left = Math.min(Math.max((clientX - offsetLeft - 16) / trackWidth, 0), 1) || 0;\n        const value = props.min + left * (props.max - props.min);\n        return { value };\n    }\n    const getThumbPosition = () => ((sliderState.position - props.min) / (props.max - props.min)) * 100;\n    const getThumbTransform = () => (getThumbPosition() / 100) * sliderState.dimensions.width;\n    const getShiftedChange = (n) => {\n        const r = 1.0 / sliderState.step;\n        return Math.floor(n * r) / r;\n    };\n    const keydownRepeat = {\n        counter: 0,\n        repeatsBeforeAcceleration: 3\n    };\n    function handleKeyDown(e) {\n        const key = e.key;\n        if (props.disabled || !validKeyCodes.includes(key))\n            return;\n        e.preventDefault();\n        switch (key) {\n            case validKeys.left:\n            case validKeys.right:\n            case validKeys.up:\n            case validKeys.down: {\n                const direction = (key === validKeys.right || key === validKeys.up) ? 1 : -1;\n                let stepsToMove = sliderState.step;\n                if (!props.preventAcceleration) {\n                    if (e.repeat) {\n                        keydownRepeat.counter++;\n                        const acceleratedStepPercentage = Math.min((keydownRepeat.counter - keydownRepeat.repeatsBeforeAcceleration) / 100, .2);\n                        stepsToMove = Math.max(sliderState.step, Math.ceil((direction > 0 ? props.max - sliderState.val : sliderState.val - props.min) * acceleratedStepPercentage));\n                    }\n                    else {\n                        keydownRepeat.counter = 0;\n                    }\n                }\n                sliderState.position = clampedChange(sliderState.val + direction * stepsToMove);\n                break;\n            }\n            case validKeys.home:\n                sliderState.position = props.min;\n                break;\n            case validKeys.end:\n                sliderState.position = props.max;\n                break;\n            case validKeys.pageup:\n            case validKeys.pagedown: {\n                const direction = key === validKeys.pageup ? 1 : -1;\n                const minStepMultiplier = 2;\n                const maxStepMultiplier = 50;\n                sliderState.position = clampedChange(sliderState.val +\n                    direction *\n                        sliderState.step *\n                        Math.max(minStepMultiplier, Math.min(maxStepMultiplier, Math.ceil((props.max - props.min) / 10 / sliderState.step))));\n                break;\n            }\n            default:\n                break;\n        }\n    }\n    function handleFocus() { }\n    function handleBlur() { }\n    function handleMouseDown(e) {\n        sliderState.sliderPressed = true;\n        if ('touches' in e) {\n            window.addEventListener('touchmove', handleMouseChange, eventOptions);\n            window.addEventListener('touchend', handleMouseUp, { once: true });\n        }\n        else {\n            window.addEventListener('mousemove', handleMouseChange, eventOptions);\n            window.addEventListener('mouseup', handleMouseUp, { once: true });\n        }\n        e.stopPropagation();\n        e.preventDefault();\n    }\n    // we don't return this function, it's called via mouseDown's addEventListener\n    function handleMouseUp() {\n        sliderState.sliderPressed = false;\n        window.removeEventListener('touchmove', handleMouseChange);\n        window.removeEventListener('mousemove', handleMouseChange);\n    }\n    function handleClick(e) {\n        handleMouseChange(e);\n    }\n    function handleMouseChange(e) {\n        const { value } = getCoordinates(e);\n        const n = roundDecimals(value);\n        sliderState.thumbEl?.focus();\n        if (sliderState.position !== n)\n            sliderState.position = n;\n    }\n    return {\n        handleKeyDown,\n        handleFocus,\n        handleBlur,\n        handleMouseDown,\n        handleClick,\n        getThumbPosition,\n        getThumbTransform,\n        getShiftedChange,\n    };\n}\n","import { classNames } from '@chbphone55/classnames';\nimport { createHandlers, useDimensions } from '@warp-ds/core/slider';\nimport { slider as ccSlider } from '@warp-ds/css/component-classes';\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport { SliderProps } from './props.js';\n\nexport function Slider({ min = 0, max = 100, ...rest }: SliderProps) {\n  const { disabled, onChange } = rest;\n\n  const sliderLine = useRef<HTMLDivElement | null>(null);\n  const thumbRef = useRef<HTMLDivElement | null>(null);\n\n  const { mountedHook, unmountedHook } = useDimensions();\n  useEffect(() => {\n    if (!sliderLine.current) return;\n    mountedHook(sliderLine.current, setDimensions);\n    return () => unmountedHook();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [sliderLine]);\n\n  const [value, setValue] = useState(rest.value);\n  const [position, setPosition] = useState(rest.value);\n  const [dimensions, setDimensions] = useState({ left: 0, width: 0 });\n  const [sliderPressed, setSliderPressed] = useState(false);\n\n  useEffect(() => {\n    onChange && onChange(value);\n  }, [value, onChange]);\n\n  const step = useMemo(() => rest.step || 1, [rest]);\n\n  const sliderState = {\n    get position() {\n      return position;\n    },\n    set position(v) {\n      setPosition(v);\n    },\n    get sliderPressed() {\n      return sliderPressed;\n    },\n    set sliderPressed(v) {\n      setSliderPressed(v);\n    },\n    get val() {\n      return value;\n    },\n    set val(v) {\n      setValue(v);\n    },\n    get thumbEl() {\n      return thumbRef.current;\n    },\n    get dimensions() {\n      return dimensions;\n    },\n    get step() {\n      return step;\n    },\n  };\n\n  const {\n    handleKeyDown,\n    handleFocus,\n    handleBlur,\n    handleMouseDown,\n    handleClick,\n    getThumbPosition,\n    getThumbTransform,\n    getShiftedChange,\n  } = createHandlers({ props: { min, max, ...rest }, sliderState });\n\n  const thumbPosition = useMemo(getThumbPosition, [getThumbPosition]);\n  const sliderActiveStyle = useMemo(\n    () => ({\n      left: 0,\n      right: 100 - thumbPosition + '%',\n    }),\n    [thumbPosition]\n  );\n\n  const transformValue = useMemo(getThumbTransform, [getThumbTransform]);\n  const thumbStyles = useMemo(\n    () => ({\n      transform: 'translateX(' + transformValue + 'px)',\n    }),\n    [transformValue]\n  );\n\n  useEffect(() => {\n    // prevents shiftedChange when modelValue was set externally\n    if (position === rest.value) return;\n    const n = rest.step ? getShiftedChange(position) : position;\n    if (value === n) return;\n    setValue(n);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [position, rest.value, rest.step]);\n\n  useEffect(() => {\n    if (sliderPressed || position === rest.value || value === rest.value)\n      return;\n    setPosition(rest.value);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [sliderPressed, rest.value]);\n\n  return (\n    <div className={ccSlider.wrapper}>\n      <div\n        ref={sliderLine}\n        className={classNames({\n          [ccSlider.track]: true,\n          [ccSlider.trackDisabled]: disabled,\n        })}\n        onClick={handleClick}\n      />\n      <div\n        className={classNames({\n          [ccSlider.activeTrack]: true,\n          [ccSlider.activeTrackDisabled]: disabled,\n        })}\n        style={sliderActiveStyle}\n        onClick={handleClick}\n      />\n      <div\n        role=\"slider\"\n        tabIndex={0}\n        className={classNames({\n          [ccSlider.thumb]: true,\n          [ccSlider.thumbDisabled]: disabled,\n          [ccSlider.thumbEnabled]: !disabled,\n        })}\n        ref={thumbRef}\n        style={thumbStyles}\n        aria-label={rest['aria-label']}\n        aria-labelledby={rest['aria-labelledby']}\n        aria-valuemin={min}\n        aria-valuemax={max}\n        aria-valuenow={value}\n        aria-valuetext={rest['aria-valuetext']}\n        onMouseDown={(e) => {\n          handleMouseDown(e as unknown as KeyboardEvent);\n        }}\n        onTouchStart={(e) => {\n          handleMouseDown(e as unknown as KeyboardEvent);\n        }}\n        onBlur={handleBlur}\n        onFocus={handleFocus}\n        onKeyDown={(e) => {\n          handleKeyDown(e as unknown as KeyboardEvent);\n        }}\n      ></div>\n    </div>\n  );\n}\n"],"names":["useDimensions","observer","useOnResize","updateDimensions","entries","left","w","sliderLineEl","validKeys","validKeyCodes","eventOptions","roundDecimals","n","decimals","rounding","isNumber","clamp","v","min","max","createHandlers","props","sliderState","clampedChange","getCoordinates","e","offsetLeft","trackWidth","clientX","getThumbPosition","getThumbTransform","getShiftedChange","r","keydownRepeat","handleKeyDown","key","direction","stepsToMove","acceleratedStepPercentage","minStepMultiplier","maxStepMultiplier","handleFocus","handleBlur","handleMouseDown","handleMouseChange","handleMouseUp","handleClick","value","_a","Slider","rest","disabled","onChange","sliderLine","useRef","thumbRef","mountedHook","unmountedHook","useEffect","setDimensions","setValue","useState","position","setPosition","dimensions","sliderPressed","setSliderPressed","step","useMemo","thumbPosition","sliderActiveStyle","transformValue","thumbStyles","jsxs","ccSlider","jsx","classNames"],"mappings":"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","x_google_ignoreList":[0,1]}