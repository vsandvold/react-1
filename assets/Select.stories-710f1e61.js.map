{"version":3,"file":"Select.stories-710f1e61.js","sources":["../../packages/select/src/component.tsx"],"sourcesContent":["import * as React from 'react';\nimport { select as ccSelect, label as ccLabel, helpText as ccHelpText } from '@warp-ds/css/component-classes';\nimport { useId } from '../../utils/src';\nimport { classNames } from '@chbphone55/classnames';\nimport type { SelectProps } from './props';\n\nconst setup = (props) => {\n  const {\n    className,\n    invalid,\n    id,\n    hint,\n    always,\n    label,\n    style,\n    optional,\n    readOnly,\n    disabled,\n    ...rest\n  } = props;\n\n  const helpId = hint ? `${id}__hint` : undefined;\n\n  return {\n    attrs: {\n      div: {\n        style,\n      },\n      label: {\n        htmlFor: id,\n        children: label,\n      },\n      select: {\n        ...rest,\n        'aria-describedby': helpId,\n        'aria-errormessage': invalid && helpId ? helpId : undefined,\n        'aria-invalid': invalid,\n        id,\n      },\n      optional,\n      help:\n        always || invalid\n          ? {\n              children: hint,\n              id: helpId,\n            }\n          : null,\n    },\n    wrapperClasses: classNames(ccSelect.wrapper, className),\n    selectClasses:  classNames({\n      [ccSelect.default]: true,\n      [ccSelect.invalid]: invalid,\n      [ccSelect.disabled]: disabled,\n      [ccSelect.readOnly]: readOnly\n    }),\n    selectWrapperClasses: classNames({\n      [ccSelect.selectWrapper]: true,\n    }),\n    helpTextClasses: classNames({\n      [ccHelpText.helpText]: true,\n      [ccHelpText.helpTextInvalid]: invalid\n    }),\n    labelClasses: classNames({\n      [ccLabel.label]: true,\n      [ccLabel.labelInvalid]: invalid\n    }),\n    chevronClasses: classNames({\n      [ccSelect.chevron]: true,\n      [ccSelect.chevronDisabled]: disabled,\n    })\n  };\n};\n\nfunction Select(props: SelectProps, ref: React.Ref<HTMLSelectElement>) {\n  const id = useId(props.id);\n  const { attrs, wrapperClasses, selectClasses, selectWrapperClasses, helpTextClasses, labelClasses, chevronClasses } = setup({ ...props, id });\n  const { div, label, select, help, optional } = attrs;\n\n  return (\n    <div className={wrapperClasses} {...div}>\n      {label.children && (\n        <label htmlFor={label.htmlFor} className={labelClasses}>\n          {label.children}\n          {optional && (\n            <span className={ccLabel.optional}>\n              (valgfritt)\n            </span>\n          )}\n        </label>\n      )}\n      <div className={selectWrapperClasses}>\n        <select ref={ref} {...select} className={selectClasses}/>\n          <div\n            className={classNames(chevronClasses)}\n          >\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"16\"\n              height=\"16\"\n              fill=\"none\"\n              viewBox=\"0 0 16 16\"\n            >\n              <path\n                stroke=\"currentColor\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth=\"1.5\"\n                d=\"M2.5 5.5L8 11L13.5 5.5\"\n              />\n            </svg>\n          </div>\n      </div>\n      {help && <div className={helpTextClasses} {...help} />}\n    </div>\n  );\n}\n\nconst _Select = React.forwardRef(Select);\nexport { _Select as Select };\n"],"names":["setup","props","className","invalid","id","hint","always","label","style","optional","readOnly","disabled","rest","helpId","classNames","ccSelect","ccHelpText","ccLabel","Select","ref","useId","attrs","wrapperClasses","selectClasses","selectWrapperClasses","helpTextClasses","labelClasses","chevronClasses","div","select","help","jsxs","jsx","_Select","React.forwardRef"],"mappings":"8NAMA,MAAAA,EAAAC,GAAA,CACE,KAAA,CAAM,UAAAC,EACJ,QAAAC,EACA,GAAAC,EACA,KAAAC,EACA,OAAAC,EACA,MAAAC,EACA,MAAAC,EACA,SAAAC,EACA,SAAAC,EACA,SAAAC,EACA,GAAAC,CACG,EAAAX,EAGLY,EAAAR,EAAA,GAAAD,UAAA,OAEA,MAAA,CAAO,MAAA,CACE,IAAA,CACA,MAAAI,CACH,EACF,MAAA,CACO,QAAAJ,EACI,SAAAG,CACC,EACZ,OAAA,CACQ,GAAAK,EACH,mBAAAC,EACiB,oBAAAV,GAAAU,EAAAA,EAAA,OAC8B,eAAAV,EAClC,GAAAC,CAChB,EACF,SAAAK,EACA,KAAAH,GAAAH,EAAA,CAGM,SAAAE,EACY,GAAAQ,CACN,EAAA,IAEN,EACR,eAAAC,EAAAC,EAAA,QAAAb,CAAA,EACsD,cAAAY,EAAA,CAC3B,CAAAC,EAAA,OAAA,EAAA,GACL,CAAAA,EAAA,OAAA,EAAAZ,EACA,CAAAY,EAAA,QAAA,EAAAJ,EACC,CAAAI,EAAA,QAAA,EAAAL,CACA,CAAA,EACtB,qBAAAI,EAAA,CACgC,CAAAC,EAAA,aAAA,EAAA,EACL,CAAA,EAC3B,gBAAAD,EAAA,CAC2B,CAAAE,EAAA,QAAA,EAAA,GACH,CAAAA,EAAA,eAAA,EAAAb,CACO,CAAA,EAC/B,aAAAW,EAAA,CACwB,CAAAG,EAAA,KAAA,EAAA,GACN,CAAAA,EAAA,YAAA,EAAAd,CACO,CAAA,EACzB,eAAAW,EAAA,CAC0B,CAAAC,EAAA,OAAA,EAAA,GACL,CAAAA,EAAA,eAAA,EAAAJ,CACQ,CAAA,CAC7B,CAEL,EAEA,SAAAO,EAAAjB,EAAAkB,EAAA,CACE,MAAAf,EAAAgB,EAAAnB,EAAA,EAAA,EACA,CAAA,MAAAoB,EAAA,eAAAC,EAAA,cAAAC,EAAA,qBAAAC,EAAA,gBAAAC,EAAA,aAAAC,EAAA,eAAAC,CAAA,EAAA3B,EAAA,CAAA,GAAAC,EAAA,GAAAG,CAAA,CAAA,EACA,CAAA,IAAAwB,EAAA,MAAArB,EAAA,OAAAsB,EAAA,KAAAC,EAAA,SAAArB,CAAA,EAAAY,EAEA,OAAAU,EAAAA,KAAA,MAAA,CAAA,UAAAT,EAAA,GAAAM,EAAA,SAAA,CAEKrB,EAAA,UAAAwB,OAAA,QAAA,CAAA,QAAAxB,EAAA,QAAA,UAAAmB,EAAA,SAAA,CAEInB,EAAA,SAAME,GAAAuB,EAAAA,IAAA,OAAA,CAAA,UAAAf,EAAA,SAAA,SAAA,cAAA,CAIL,EAAA,EAEJc,EAAAA,KAAA,MAAA,CAAA,UAAAP,EAAA,SAAA,CAGAQ,EAAA,IAAA,SAAA,CAAA,IAAAb,EAAA,GAAAU,EAAA,UAAAN,EAAA,EAAuDS,EAAA,IACrD,MAAC,CAAA,UAAAlB,EAAAa,CAAA,EACqC,SAAAK,EAAA,IAEpC,MAAC,CAAA,MAAA,6BACO,MAAA,KACA,OAAA,KACC,KAAA,OACF,QAAA,YACG,SAAAA,EAAA,IAER,OAAC,CAAA,OAAA,eACQ,cAAA,QACO,eAAA,QACC,YAAA,MACH,EAAA,wBACV,CAAA,CACJ,CAAA,CACF,CAAA,CACF,EAAA,EACJF,GAAAE,EAAA,IAAA,MAAA,CAAA,UAAAP,EAAA,GAAAK,EAAA,CACoD,CAAA,CAAA,CAG1D,CAEA,MAAAG,EAAAC,EAAAA,WAAAhB,CAAA;;;;;;;;;;;;;;;;;;;;;"}