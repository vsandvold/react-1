import{j as e,h as a,d as le}from"./index-8b04f8eb.js";import{K as re,V as ie}from"./icons-a16f1b32.js";import{R as y,r as Q}from"./index-b75aab2a.js";import{r}from"./index.m-73ef1fbe.js";import{U as de,E as pe}from"./unstyled-heading-2bd0ed13.js";import"./item-c5e34c6c.js";import"./useId-906286da.js";function n(o){const{children:t,expanded:s=!1,title:i="",info:ue=!1,box:l=!1,bleed:X=!1,buttonClass:Y="",contentClass:Z="",className:ee,onChange:g,chevron:ae=!0,animated:ne,headingLevel:te,...oe}=o,[d,E]=y.useState(s);y.useEffect(()=>{E(s)},[s]);const se=j=>{E(!j),g&&g(!j)};return e.jsxs("div",{...oe,className:r(ee,{[a.expandable]:!0,[a.expandableBox]:l,[a.expandableBleed]:X}),children:[e.jsx(de,{level:te,children:e.jsx("button",{type:"button","aria-expanded":d,className:r({[Y||""]:!0,[a.button]:!0,[a.buttonBox]:l}),onClick:()=>se(d),children:e.jsxs("div",{className:a.title,children:[typeof i=="string"?e.jsx("span",{className:a.titleType,children:i}):i,ae&&e.jsx("div",{className:r({[a.chevron]:!0,[a.chevronExpanded]:d,[a.chevronBox]:l,[a.chevronNonBox]:!l}),children:e.jsx(re,{})})]})})}),e.jsx(ce,{animated:ne,stateExpanded:d,children:e.jsx("div",{className:r({[Z||""]:!0,[le.box]:l,[a.paddingTop]:l&&i}),children:t})})]})}function ce({animated:o,stateExpanded:t,children:s}){return o?e.jsx(pe,{show:t,children:s}):e.jsx("div",{className:r({[a.expansion]:!0,[a.expansionNotExpanded]:!t}),"aria-hidden":t?void 0:!0,children:s})}try{n.displayName="Expandable",n.__docgenInfo={description:"",displayName:"Expandable",props:{className:{defaultValue:null,description:"Additional classes to include",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"CSS styles to inline on the component",name:"style",required:!1,type:{name:"CSSProperties"}},bleed:{defaultValue:{value:"false"},description:"Toggles bleed, makes a box full-width on mobile",name:"bleed",required:!1,type:{name:"boolean"}},info:{defaultValue:{value:"false"},description:"Styles the box with light blue color",name:"info",required:!1,type:{name:"boolean"}},expanded:{defaultValue:{value:"false"},description:"The state of the component, either true for expanded or false for closed.",name:"expanded",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"Event function to be called any time the component is expanded or closed. Function will be passed a boolean with a value of true if the component is now expanded or false if it is now closed.",name:"onChange",required:!1,type:{name:"((state: boolean) => void)"}},title:{defaultValue:null,description:"Component title. Can be a string or component. Used to display the title value which is always present regardless of whether the component is open or closed.",name:"title",required:!0,type:{name:"ReactNode"}},box:{defaultValue:{value:"false"},description:"Whether to display the component as a padded box or not.",name:"box",required:!1,type:{name:"boolean"}},buttonClass:{defaultValue:null,description:"Additional CSS classes to include on the button part of the component",name:"buttonClass",required:!1,type:{name:"string"}},contentClass:{defaultValue:null,description:"Additional CSS classes to include on the content part of the component",name:"contentClass",required:!1,type:{name:"string"}},chevron:{defaultValue:{value:"true"},description:"Whether to display the chevron on the button part of the component",name:"chevron",required:!1,type:{name:"boolean"}},animated:{defaultValue:{value:"false"},description:"Animate open and close",name:"animated",required:!1,type:{name:"boolean"}},headingLevel:{defaultValue:null,description:`Wrap the toggle button in a heading element with the specified level.
If headingLevel is not specified, the button will not be wrapped by a heading element.`,name:"headingLevel",required:!1,type:{name:"enum",value:[{value:"1"},{value:"2"},{value:"3"},{value:"4"},{value:"5"},{value:"6"}]}}}}}catch{}const Ee={title:"Layout/Expandable"},p=()=>e.jsx(n,{title:"This is a title",children:e.jsx("h1",{children:"I am expandable"})}),c=()=>e.jsx(n,{title:"This is a title",box:!0,children:e.jsx("h1",{children:"I am expandable"})}),u=()=>e.jsx(n,{title:e.jsxs("div",{className:"flex flex-row items-center",children:[e.jsx(ie,{}),e.jsx("p",{className:"ml-8 mb-0",children:"This is a title with an icon"})]}),box:!0,info:!0,children:e.jsx("h1",{children:"I am expandable"})}),m=()=>e.jsx(n,{title:"This is a title",box:!0,info:!0,children:e.jsx("h1",{children:"I am expandable"})}),x=()=>{const[o,t]=Q.useState(!1);return e.jsx(n,{title:o?"Open":"Closed",box:!0,info:!0,onChange:t,children:e.jsx("h1",{children:"I am expandable"})})},h=()=>{const[o,t]=Q.useState(!1);return e.jsx(n,{title:o?"Open":"Closed",box:!0,info:!0,chevron:!1,onChange:t,children:e.jsx("h1",{children:"I am expandable"})})},b=()=>e.jsx(n,{title:"Animated box",box:!0,info:!0,animated:!0,children:e.jsx("h1",{children:"I am expandable"})}),f=()=>e.jsx(n,{title:"Animated box",expanded:!0,box:!0,info:!0,animated:!0,children:e.jsx("h1",{children:"I am expandable"})}),v=()=>e.jsx(n,{title:"I'm also a heading",headingLevel:1,children:e.jsx("h1",{children:"I am expandable"})});var C,I,S;p.parameters={...p.parameters,docs:{...(C=p.parameters)==null?void 0:C.docs,source:{originalSource:`() => <Expandable title="This is a title">
    <h1>I am expandable</h1>
  </Expandable>`,...(S=(I=p.parameters)==null?void 0:I.docs)==null?void 0:S.source}}};var N,w,V;c.parameters={...c.parameters,docs:{...(N=c.parameters)==null?void 0:N.docs,source:{originalSource:`() => <Expandable title="This is a title" box>
    <h1>I am expandable</h1>
  </Expandable>`,...(V=(w=c.parameters)==null?void 0:w.docs)==null?void 0:V.source}}};var q,B,T;u.parameters={...u.parameters,docs:{...(q=u.parameters)==null?void 0:q.docs,source:{originalSource:`() => <Expandable title={<div className="flex flex-row items-center">
        <IconBag16 />
        <p className="ml-8 mb-0">This is a title with an icon</p>
      </div>} box info>
    <h1>I am expandable</h1>
  </Expandable>`,...(T=(B=u.parameters)==null?void 0:B.docs)==null?void 0:T.source}}};var A,O,_;m.parameters={...m.parameters,docs:{...(A=m.parameters)==null?void 0:A.docs,source:{originalSource:`() => <Expandable title="This is a title" box info>
    <h1>I am expandable</h1>
  </Expandable>`,...(_=(O=m.parameters)==null?void 0:O.docs)==null?void 0:_.source}}};var L,R,W;x.parameters={...x.parameters,docs:{...(L=x.parameters)==null?void 0:L.docs,source:{originalSource:`() => {
  const [open, setOpen] = React.useState(false);
  return <Expandable title={open ? 'Open' : 'Closed'} box info onChange={setOpen}>
      <h1>I am expandable</h1>
    </Expandable>;
}`,...(W=(R=x.parameters)==null?void 0:R.docs)==null?void 0:W.source}}};var H,U,k;h.parameters={...h.parameters,docs:{...(H=h.parameters)==null?void 0:H.docs,source:{originalSource:`() => {
  const [open, setOpen] = React.useState(false);
  return <Expandable title={open ? 'Open' : 'Closed'} box info chevron={false} onChange={setOpen}>
      <h1>I am expandable</h1>
    </Expandable>;
}`,...(k=(U=h.parameters)==null?void 0:U.docs)==null?void 0:k.source}}};var D,K,F;b.parameters={...b.parameters,docs:{...(D=b.parameters)==null?void 0:D.docs,source:{originalSource:`() => {
  return <Expandable title="Animated box" box info animated>
      <h1>I am expandable</h1>
    </Expandable>;
}`,...(F=(K=b.parameters)==null?void 0:K.docs)==null?void 0:F.source}}};var M,P,$;f.parameters={...f.parameters,docs:{...(M=f.parameters)==null?void 0:M.docs,source:{originalSource:`() => {
  return <Expandable title="Animated box" expanded box info animated>
      <h1>I am expandable</h1>
    </Expandable>;
}`,...($=(P=f.parameters)==null?void 0:P.docs)==null?void 0:$.source}}};var z,G,J;v.parameters={...v.parameters,docs:{...(z=v.parameters)==null?void 0:z.docs,source:{originalSource:`() => {
  return <Expandable title="I'm also a heading" headingLevel={1}>
      <h1>I am expandable</h1>
    </Expandable>;
}`,...(J=(G=v.parameters)==null?void 0:G.docs)==null?void 0:J.source}}};const je=["Default","Box","BoxWithCustomIcon","InfoBox","Controlled","NoChevron","Animated","AnimatedExpanded","Heading"];export{b as Animated,f as AnimatedExpanded,c as Box,u as BoxWithCustomIcon,x as Controlled,p as Default,v as Heading,m as InfoBox,h as NoChevron,je as __namedExportsOrder,Ee as default};
//# sourceMappingURL=Expandable.stories-4d2904de.js.map
