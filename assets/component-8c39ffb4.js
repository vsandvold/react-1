import{x as l,j as i,l as m,h as x}from"./index-4d360749.js";import"./index-b75aab2a.js";import{u as q}from"./useId-906286da.js";import{r as o}from"./index.m-73ef1fbe.js";import{I as v}from"./item-1223c28a.js";function N({id:e,isInvalid:t,title:n,optional:a}){return i.jsxs("legend",{id:`${e}__title`,className:o({[m.label]:!0,[m.labelInvalid]:t}),children:[n,a&&i.jsx("span",{className:m.optional,children:"(valgfritt)"})]})}function $({isInvalid:e,helpId:t,helpText:n}){return i.jsx("div",{id:t,className:o({[x.helpText]:!0,[x.helpTextInvalid]:e}),children:n})}function k(e){const t=q(),n=e.helpText?`${t}__hint`:void 0,a=e.invalid,c=e.type==="radio",h=e.type==="checkbox",d=e.type==="radio-button",r=c||d,f=e.selected!==void 0||e.checked!==void 0,b=o({[l.indeterminate]:e.indeterminate,[l.label]:!d,[l.focusable]:!d,[l.noContent]:!e.indeterminate,[`${l.radio} ${l.labelRadioBorder} ${l.radioChecked}`]:c,[l.radioInvalid]:c&&a,[`${l.checkbox} ${l.labelCheckboxBorder} ${l.checkboxChecked}`]:h,[l.icon]:h&&!e.indeterminate,[l.checkboxInvalid]:h&&a,[l.radioButtonsLabel]:d,[l.radioButtonsLabelSmall]:e.small}),p=o({[l.input]:!0,[l.a11y]:!0}),C=o(e.className,{[l.wrapper]:!0,[`${l.radioButtons} ${l.focusableWithin}`]:d,[l.radioButtonsJustified]:e.equalWidth}),T=o({[l.radioButtonsGroup]:!0,[l.radioButtonsGroupJustified]:e.equalWidth});return i.jsxs("fieldset",{role:r?"radiogroup":void 0,"aria-invalid":r?a:void 0,"aria-errormessage":r&&a?n:void 0,"aria-describedby":n,className:l.field,children:[e.title&&i.jsx(N,{id:t,title:e.title,isInvalid:a,optional:e.optional}),i.jsx("div",{className:C,children:!e.options&&e.label?i.jsx(v,{controlled:f,label:e.label,inputClassName:p,labelClassName:b,checked:e.checked,defaultChecked:e.defaultChecked,indeterminate:e.indeterminate,onChange:s=>e.onChange(s),name:`${t}:toggle`,invalid:a,helpId:n,type:r?"radio":"checkbox",noVisibleLabel:e.noVisibleLabel},`${t+e.type}`):e.options&&e.options.map((s,V)=>{var g,y;return i.jsx(v,{controlled:f,checked:(g=e.selected)==null?void 0:g.some(u=>u.value===s.value),defaultChecked:(y=e.defaultSelected)==null?void 0:y.some(u=>u.value===s.value),inputClassName:p,labelClassName:b,groupClassName:T,option:s,onChange:u=>e.onChange(u),name:`${t}:toggle`,invalid:a,helpId:n,type:r?"radio":"checkbox",noVisibleLabel:e.noVisibleLabel,multiple:!0},`${t+V+e.type}`)})}),e.helpText&&i.jsx($,{helpId:n,helpText:e.helpText,isInvalid:a})]})}try{k.displayName="Toggle",k.__docgenInfo={description:"",displayName:"Toggle",props:{type:{defaultValue:null,description:"The type of Toggle",name:"type",required:!0,type:{name:"enum",value:[{value:'"checkbox"'},{value:'"radio"'},{value:'"radio-button"'}]}},title:{defaultValue:null,description:"The option(s) title",name:"title",required:!1,type:{name:"string"}},invalid:{defaultValue:null,description:"Renders options in invalid state. Often paired together with `helpText` to provide feedback about the error.",name:"invalid",required:!1,type:{name:"boolean"}},helpText:{defaultValue:null,description:"Help text beneath options",name:"helpText",required:!1,type:{name:"string"}},options:{defaultValue:null,description:"An array of options to render",name:"options",required:!1,type:{name:"ToggleEntry[]"}},selected:{defaultValue:null,description:"An array of options to be selected / checked (controlled)",name:"selected",required:!1,type:{name:"ToggleEntry[]"}},defaultSelected:{defaultValue:null,description:"An array of options to be selected / checked on mount (uncontrolled)",name:"defaultSelected",required:!1,type:{name:"ToggleEntry[]"}},label:{defaultValue:null,description:"If you only need to render a single option, use this prop instead",name:"label",required:!1,type:{name:"string"}},checked:{defaultValue:null,description:"Whether the single option should be checked (controlled)",name:"checked",required:!1,type:{name:"boolean"}},defaultChecked:{defaultValue:null,description:"Whether the single option should be checked on mount (uncontrolled)",name:"defaultChecked",required:!1,type:{name:"boolean"}},onChange:{defaultValue:null,description:"Retrieve the selected entry or a boolean value, depending on whether you are working with single or multiple options",name:"onChange",required:!0,type:{name:"(value: any) => void"}},small:{defaultValue:null,description:"Whether the elements should be small",name:"small",required:!1,type:{name:"boolean"}},optional:{defaultValue:null,description:`Whether the toggle is optional
Appends (valgfritt) to the end of the title for indication`,name:"optional",required:!1,type:{name:"boolean"}},equalWidth:{defaultValue:null,description:"Will make each radio-button equal width",name:"equalWidth",required:!1,type:{name:"boolean"}},className:{defaultValue:null,description:"Custom classes applied to the wrapping container",name:"className",required:!1,type:{name:"string"}},noVisibleLabel:{defaultValue:null,description:"Whether label should be invisible",name:"noVisibleLabel",required:!1,type:{name:"boolean"}},indeterminate:{defaultValue:null,description:`Whether a single option is indeterminate, or "partially checked."
The checkbox will appear with a small dash instead of a tick to indicate that the option is not exactly checked or unchecked.`,name:"indeterminate",required:!1,type:{name:"boolean"}}}}}catch{}export{k as T};
//# sourceMappingURL=component-8c39ffb4.js.map
